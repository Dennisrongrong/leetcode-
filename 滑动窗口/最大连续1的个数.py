# -*- coding: utf-8 -*-
"""
@Time ： 2023/11/5 10:46
@Auth ： 归去来兮
@File ：最大连续1的个数.py
@IDE ：PyCharm
@Motto:花中自幼微风起
"""
"""
给定一个二进制数组 nums 和一个整数 k，如果可以翻转最多 k 个 0 ，则返回 数组中连续 1 的最大个数 。
示例 1：
输入：nums = [1,1,1,0,0,0,1,1,1,1,0], K = 2
输出：6
解释：[1,1,1,0,0,1,1,1,1,1,1]
粗体数字从 0 翻转到 1，最长的子数组长度为 6。
示例 2：
输入：nums = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], K = 3
输出：10
解释：[0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1]
粗体数字从 0 翻转到 1，最长的子数组长度为 10。

基本思路：题目提供k次机会把0翻转成1，相当于你手上有k张牌。
右指针right 遍历数组，遇到0就“出牌”，手上的牌就少了。出到负数的时候，就要移动left 前进，遇到0才 “抽牌”，牌又多了
right和left之间的最长区间就是 连续1的最大个数
"""
nums ,K= [1,1,1,0,0,0,1,1,1,1,0], 2
left,right,res=0,0,0
n=len(nums)

while right<n:
    if nums[right]==0:
        K=K-1
    while K<0:
        if nums[left]==0:
            K=K+1
        left=left+1
    res=max(res,right-left+1)
    right=right+1
print(res)

